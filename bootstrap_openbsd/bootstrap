#!/usr/bin/env expect

if { [llength $argv] != 1} {
    puts "Usage: ./bootstrap <vmname>"
    exit 1
}

set vmname [lindex $argv 0]

# Make sure we have installmedia and clean root disk
exec curl -sC- -o isos/install68.iso https://cdn.openbsd.org/pub/OpenBSD/6.8/amd64/install68.iso
exec qemu-img create -f qcow2 vms/vm$vmname.qcow2 20G

spawn qemu-system-x86_64 \
    -no-reboot \
    -machine type=q35,accel=kvm:hvf \
    -nographic \
    -smp 2 \
    -m 2G \
    -drive if=virtio,file=vms/vm$vmname.qcow2,format=qcow2,media=disk \
    -drive file=isos/install68.iso,media=cdrom \
    -nic user,ipv6=off,model=virtio

# Catch bootloader to set console to serial, and continue boot
expect "boot>"
send "set tty com0\r"
expect "boot>"
send "boot\r"

# Wait to be presented by options, and drop to shell
expect "\(S\)hell?"
send "s\r"

# Write autoinstall answers
expect "#"
send "cat << EOF > /auto_install.conf\r"

expect ">"
send "System hostname = $vmname\r"
send [exec cat bootstrap_openbsd/auto_install.conf]
send "\rEOF\r"

# Exit shell and trigger autoinstall directly instead of waiting for timeout
expect "#"
send "exit\r"

expect "\(S)hell?"
send "a\r"

# Wait for autoinstalll to finish"
expect "rebooting..."

# Catch all
interact
